# Usando a imagem base do Debian
FROM debian:bullseye AS development

# Definindo o diretório de trabalho dentro do container
WORKDIR /app

# Copiando os arquivos de código-fonte para o container
COPY . .

# Instalando o git e demais pacotes
RUN apt-get update && apt-get install -y git dirmngr gpg curl gawk

# Instalando o asdf
RUN git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.12.0 && \
  echo ". $HOME/.asdf/asdf.sh" >> ~/.profile && \
  echo ". $HOME/.asdf/completions/asdf.bash" >> ~/.profile; \
  . ~/.profile

# Instalação do Python
RUN asdf plugin add python https://github.com/danhper/asdf-python.git \
  asdf install python latest \
  asdf global python latest

# Instalação do NodeJS
RUN asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git \
  asdf install nodejs latest \
  asdf global nodejs latest

# Instalação do Ruby
RUN asdf plugin add ruby https://github.com/asdf-vm/asdf-ruby.git \
  asdf install ruby latest \
  asdf global ruby latest

# Instalação do Php
RUN asdf plugin add php https://github.com/asdf-community/asdf-php.git \
  asdf install php latest \
  asdf global php latest

# Defina aqui qualquer configuração global necessária para o ambiente de desenvolvimento

# NÃO é necessário definir um comando para executar a aplicação neste arquivo,
# pois vamos usar o docker-compose para orquestrar a execução dos containers.
